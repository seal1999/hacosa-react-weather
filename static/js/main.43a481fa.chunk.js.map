{"version":3,"sources":["actions/actionCreators.js","actions/actionTypes.js","components/Aside.js","components/Header.js","components/Main.js","components/Footer.js","containers/App.js","reducers/weatherReducer.js","reducers/index.js","store/store.js","index.js"],"names":["ROOT_URL","fetchWeather","city","promise","axios","url","method","dispatch","type","then","res","payload","data","catch","error","fetchWeatherFail","Aside","props","class","src","alt","defaultProps","text","color","textColor","HeaderDiv","styled","div","Header","useState","showMenu","headerState","setState","onClick","console","log","id","data-name","viewBox","width","height","rx","transform","fill","d","font-family","font-size","font-weight","letter-spacing","x","y","Main","FooterDiv","Copy","small","Footer","Container","App","className","Component","AppWithRedux","connect","state","weather","errorMessage","isLoading","bindActionCreators","enhance","initialState","rootReducer","combineReducers","action","list","obj","concat","storeEnhancer","applyMiddleware","ReduxThunk","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43a481fa.chunk.js","sourcesContent":["import axios from \"axios\";\nimport * as types from \"./actionTypes\";\n\nconst API_KEY = \"15e39f24e05f6ea0af88f89dc11e5295\";\nconst ROOT_URL = `https://api.openweathermap.org/data/2.5/forecast?appid=${API_KEY}`;\n\n/*\n  We don't expose the start/success/fail action creators (but we do expose the\n  start/success/fail action types). We need these action creators to test the\n  fetchWeather action creator, which is asynchronous.\n*/\nfunction fetchWeatherStart() {\n  const action = { type: types.FETCH_WEATHER_START };\n  return action;\n}\n\nfunction fetchWeatherSuccess(data) {\n  const action = { type: types.FETCH_WEATHER_SUCCESS, payload: data };\n  return action;\n}\n\nfunction fetchWeatherFail(error) {\n  const action = { type: types.FETCH_WEATHER_FAIL, payload: error };\n  return action;\n}\n\nexport function fetchWeather(city) {\n  const promise = axios({\n    url: `${ROOT_URL}&q=${city}`,\n    method: \"get\"\n  });\n  return function(dispatch) {\n    dispatch(fetchWeatherStart());\n    return promise\n      .then(res => {\n        dispatch(fetchWeatherSuccess(res.data));\n        return res;\n      })\n      .catch(error => {\n        dispatch(fetchWeatherFail(error));\n        return error;\n      });\n  };\n}\n","export const FETCH_WEATHER = \"FETCH_WEATHER\";\nexport const FETCH_WEATHER_START = \"FETCH_WEATHER_START\";\nexport const FETCH_WEATHER_SUCCESS = \"FETCH_WEATHER_SUCCESS\";\nexport const FETCH_WEATHER_FAIL = \"FETCH_WEATHER_FAIL\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Aside.css\";\n\nconst Aside = props => {\n  // do something\n  // const navClass = `nav-extended ${props.color}`;\n  return (\n    <div class=\"side-menu__container\">\n      <nav class=\"slide-menu\">\n        <section class=\"menu-header\">\n          <span class=\"greeting__text\">Welcome Back</span>\n          <div class=\"profile-image__container\">\n            <img src=\"https://www.jamf.com/jamf-nation/img/default-avatars/generic-user-purple.png\" alt=\"profile\" class=\"profile__image\" />\n          </div>\n          <div class=\"account-details\">\n            <span class=\"name__text\">userEmail</span>\n            <span class=\"email__text\">Free Plan</span>\n          </div>\n        </section>\n        <section class=\"menu-body\">\n          <ul class=\"menu-links\">\n            <li class=\"menu-link\">Home</li>\n            <li class=\"menu-link\"> Add City</li >\n            <li class=\"menu-link\">Logout</li >\n          </ul >\n        </section >\n        <section class=\"menu-footer\">\n          <small class=\"copyright__text\">Copyright © 2019 Minimus</small>\n        </section>\n      </nav >\n    </div >\n  );\n};\n\nAside.defaultProps = {\n  text: \"Header text\",\n  color: \"purple darken-4\",\n  textColor: \"white\",\n};\n\nAside.propTypes = {\n  text: PropTypes.string,\n  color: PropTypes.string,\n  textColor: PropTypes.string,\n};\n\nexport default Aside;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport \"./Header.css\";\n\n// styled-component sample\nconst HeaderDiv = styled.div`\n  background-color: #fff;\n  width: 100%;\n  display: grid;\n  grid-template-columns: 1fr 1fr 0.25fr;\n  box-shadow: 0 0 2rem rgba(0, 0, 255, 0.1);\n  margin: 0;\n  min-height: 4rem;\n  align-items: center;\n  animation: slidedown 0.5s ease-in-out, fadein 1s ease-in-out;\n`;\n\n\nconst Header = props => {\n\n  const [headerState, setState] = useState({\n    showMenu : false\n  }); \n  const toggleMenu = () => {\n    console.log(headerState.showMenu);\n    setState({ showMenu : !headerState.showMenu});\n  }\n\n  return (\n    <HeaderDiv>\n      <div class=\"left__section\">\n        <svg onClick={toggleMenu} class=\"hamburger__icon\" id=\"Menu_Burger_Icon\" data-name=\"Menu Burger Icon\"\n           viewBox=\"31.5 30 49.9 32\">\n          <rect id=\"Rectangle_9\" width=\"49.9\" height=\"4\" \n                class=\"hamburger__icon__fill\" data-name=\"Rectangle 9\" rx=\"2\"\n                transform=\"translate(31.5 58)\"></rect>\n          <rect id=\"Rectangle_10\" width=\"49.9\" height=\"4\"\n                class=\"hamburger__icon__fill\" data-name=\"Rectangle 10\" rx=\"2\"\n                transform=\"translate(31.5 44)\"></rect>\n          <rect id=\"Rectangle_11\" width=\"49.9\" height=\"4\" \n                class=\"hamburger__icon__fill\" data-name=\"Rectangle 11\" rx=\"2\"\n                transform=\"translate(31.5 30)\"></rect>\n        </svg>\n        <svg class=\"logo__icon\" viewBox=\"150.3 22.2 213.7 42.8\">\n          <path fill=\"#00ff9b\" d=\"M150.3 65V22.2L193 65z\" data-name=\"Path 1\"></path>\n          <path fill=\"#003eff\" d=\"M193.1 65h-42.8L193 22.2z\" data-name=\"Path 2\"></path>\n          <text class=\"logo__text\" fill=\"#432c85\"\n                font-family=\"SegoeUI-Semibold,Segoe UI\" font-size=\"30\" font-weight=\"600\"\n                letter-spacing=\".1em\" transform=\"translate(220 56)\">\n            <tspan x=\"0\" y=\"0\">Seal1999</tspan>\n          </text>\n        </svg>\n      </div>\n      <h3 class=\"date__text\">Today</h3>\n      <div class=\"mode-toggle__container\">\n        <span class=\"mode-toggle__text\">Light</span>\n        <label class=\"toggle-button__container\">\n          <input type=\"checkbox\" class=\"mode-toggle__input\"/>\n          <span class=\"mode-toggle__bg\"></span>\n          <span class=\"mode-toggle__circle\"></span>\n        </label>\n        <span class=\"mode-toggle__text\">Dark</span>\n      </div >\n    </HeaderDiv>\n  );\n};\n\nHeader.defaultProps = {\n  // props는 Header 컴포넌트를 외부에서 호출할 때 넘겨주는 property\n  // showMenu를 여기에 넣으면 안되네.. \n  showMenu : false\n};\n\nHeader.propTypes = {\n  showMenu: PropTypes.bool\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Main = props => {\n  // do something\n  // const navClass = `nav-extended ${props.color}`;\n  return (\n    <div>\n      <h3>Main</h3>\n    </div>\n  );\n};\n\nMain.defaultProps = {\n  text: \"Header text\",\n  color: \"purple darken-4\",\n  textColor: \"white\",\n};\n\nMain.propTypes = {\n  text: PropTypes.string,\n  color: PropTypes.string,\n  textColor: PropTypes.string,\n};\n\nexport default Main;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\n// styled-component sample\nconst FooterDiv = styled.div`\n  min-height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Copy = styled.small`\n  display: block;\n  text-align: center;\n`;\n\nconst Footer = props => {\n  // do something\n  // const navClass = `nav-extended ${props.color}`;\n  return (\n    <FooterDiv>\n      <Copy>Copyright © 2020 Teacher.Seal</Copy>\n    </FooterDiv>\n  );\n};\n\nFooter.defaultProps = {\n  text: \"Header text\",\n  color: \"purple darken-4\",\n  textColor: \"white\",\n};\n\nFooter.propTypes = {\n  text: PropTypes.string,\n  color: PropTypes.string,\n  textColor: PropTypes.string,\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n// import { PropagateLoader } from \"react-spinners\";\nimport { fetchWeather } from \"../actions/actionCreators\";\nimport Aside from \"../components/Aside\";\nimport Header from \"../components/Header\";\nimport Main from \"../components/Main\";\nimport Footer from \"../components/Footer\";\n\nconst Container = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  flex-flow: column;\n  transition: background 300ms linear;\n  background-image: linear-gradient(to top, #5ee7df 0%, #66a6ff 100%);\n`;\n\n/*\n  component안에서 method의 실행순서\n  (1) 컴포넌트 생성시: constructor -> componentWillMount -> render -> componentDidMount\n  (2) 컴포넌트 제거시: componentWillUnmount \n  (3) 컴포넌트의 props 변경시: componentWillReceiveProps -> shouldComponentUpdate -> componentWillUpdate-> render -> componentDidUpdate\n  (4) 컴포넌트의 state 변경시: shouldComponentUpdate -> componentWillUpdate-> render -> componentDidUpdate \n*/\nclass App extends Component {\n  componentDidMount() {\n    // 컴포넌트 생성이 끝나고 실행될 초기화 로직, 예: Add된 도시 날씨를 읽어오기 \n    // this.props.fetchWeather(\"San Francisco\");\n  }\n\n  render() {\n    /*\n      Pass the fetchWeather action creator down to the component hierarchy.\n      We want to call it - namely we want to dispatch a new action to the redux\n      store - when we enter a new city in the search bar.\n    */\n    // const { data, errorMessage, fetchWeather } = this.props;\n    return (\n      <div className=\"container\">\n        <Container>\n          {/* 컴포넌트는 Aside, Head, Main, Footer로 구성 */}\n          <Aside />\n          <Header />\n          <Main />\n          <Footer />\n        </Container>\n      </div>\n    );\n  }\n}\n\n/*\n  redux에 의해 관리되는 state를 가져와서 props를 통해 컨테이너 컴포넌트에서 사용가능하도록 매핑\n*/\nfunction mapStateToProps(state) {\n  const { data, errorMessage, isLoading } = state.weather;\n  const props = {\n    data,\n    errorMessage,\n    isLoading,\n  };\n  return props;\n}\n\n/* \n  action creator를 props에 bind하고, dispatch 함수를 통해 모든 reducer에게 전달\n  이 함수에서 전달된 것들은 UserList 컨테이너의 props로 사용\n*/\nfunction mapDispatchToProps(dispatch) {\n  // object destructuring: {fetchUsers (prop): fetchUsers (action creator)}\n  return bindActionCreators({ fetchWeather }, dispatch);\n}\n\n/*\n  Promote the \"dumb\", redux-unaware, presentational component, to a \"smart\",\n  redux-aware, container component.\n*/\nconst enhance = connect(mapStateToProps, mapDispatchToProps);\nconst AppWithRedux = enhance(App);\n\nexport { App, AppWithRedux };\n","import * as actions from \"../actions/actionTypes\";\n\nexport const initialState = {\n  data: [],\n  isLoading: false,\n  errorMessage: \"\"\n};\n\nexport function weatherReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.FETCH_WEATHER_SUCCESS:\n      const { city, list } = action.payload;\n      const obj = {\n        city,\n        list\n      };\n      return {\n        ...state,\n        isLoading: false,\n        data: [obj].concat(state.data),\n        errorMessage: \"\"\n      };\n    case actions.FETCH_WEATHER_START:\n      return {\n        ...state,\n        isLoading: true,\n        errorMessage: \"\"\n      };\n    case actions.FETCH_WEATHER_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        errorMessage: \"Cannot find the city you just typed\"\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { weatherReducer } from \"./weatherReducer\";\n\nconst rootReducer = combineReducers({\n  weather: weatherReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport promise from \"redux-promise-middleware\";\nimport rootReducer from \"../reducers\";\n\nconst storeEnhancer = applyMiddleware(promise, ReduxThunk);\nconst store = createStore(rootReducer, storeEnhancer);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { AppWithRedux } from \"./containers/App\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppWithRedux />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}